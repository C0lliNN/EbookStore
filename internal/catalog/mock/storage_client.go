// Code generated by mockery v2.9.4. DO NOT EDIT.

package mock

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// StorageClient is an autogenerated mock type for the StorageClient type
type StorageClient struct {
	mock.Mock
}

// GeneratePreSignedUrl provides a mock function with given fields: key
func (_m *StorageClient) GeneratePreSignedUrl(key string) (string, error) {
	ret := _m.Called(key)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RetrieveFile provides a mock function with given fields: key
func (_m *StorageClient) RetrieveFile(key string) (io.ReadCloser, error) {
	ret := _m.Called(key)

	var r0 io.ReadCloser
	if rf, ok := ret.Get(0).(func(string) io.ReadCloser); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.ReadCloser)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveFile provides a mock function with given fields: key, content
func (_m *StorageClient) SaveFile(key string, content io.ReadSeeker) error {
	ret := _m.Called(key, content)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, io.ReadSeeker) error); ok {
		r0 = rf(key, content)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
