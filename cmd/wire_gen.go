// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/c0llinn/ebook-store/config/aws"
	"github.com/c0llinn/ebook-store/config/db"
	"github.com/c0llinn/ebook-store/internal/api"
	http2 "github.com/c0llinn/ebook-store/internal/auth/delivery/http"
	"github.com/c0llinn/ebook-store/internal/auth/email"
	"github.com/c0llinn/ebook-store/internal/auth/helper"
	"github.com/c0llinn/ebook-store/internal/auth/repository"
	"github.com/c0llinn/ebook-store/internal/auth/token"
	"github.com/c0llinn/ebook-store/internal/auth/usecase"
	"net/http"
)

// Injectors from wire.go:

func CreateWebServer() *http.Server {
	engine := api.NewRouter()
	gormDB := db.NewConnection()
	userRepository := repository.NewUserRepository(gormDB)
	hmacSecret := token.NewHMACSecret()
	jwtWrapper := token.NewJWTWrapper(hmacSecret)
	ses := aws.NewSNSService()
	client := email.NewEmailClient(ses)
	passwordGenerator := helper.NewPasswordGenerator()
	authUseCase := usecase.NewAuthUseCase(userRepository, jwtWrapper, client, passwordGenerator)
	uuidGenerator := helper.NewUUIDGenerator()
	authHandler := http2.NewAuthHandler(authUseCase, uuidGenerator)
	server := api.NewHttpServer(engine, authHandler)
	return server
}
